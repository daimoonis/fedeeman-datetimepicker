{"version":3,"file":"fedeeman-datetimepicker-core.umd.js.map","sources":[null,"ng://fedeeman-datetimepicker/core/adapter/datetime-adapter.ts","ng://fedeeman-datetimepicker/core/adapter/datetime-formats.ts","ng://fedeeman-datetimepicker/core/adapter/native-datetime-adapter.ts","ng://fedeeman-datetimepicker/core/adapter/native-datetime-formats.ts","ng://fedeeman-datetimepicker/core/adapter/adapter.module.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-animations.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-errors.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-filtertype.ts","ng://fedeeman-datetimepicker/core/datetimepicker/calendar.ts","ng://fedeeman-datetimepicker/core/datetimepicker/calendar-body.ts","ng://fedeeman-datetimepicker/core/datetimepicker/clock.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-input.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-toggle.ts","ng://fedeeman-datetimepicker/core/datetimepicker/month-view.ts","ng://fedeeman-datetimepicker/core/datetimepicker/year-view.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DateAdapter } from \"@angular/material/core\";\r\n\r\nexport abstract class DatetimeAdapter<D> extends DateAdapter<D> {\r\n\r\n  constructor(protected _delegate: DateAdapter<D>) {\r\n    super();\r\n  }\r\n\r\n  abstract getHour(date: D): number;\r\n\r\n  abstract getMinute(date: D): number;\r\n\r\n  abstract getFirstDateOfMonth(date: D): D;\r\n\r\n  abstract isInNextMonth(startDate: D, endDate: D): boolean;\r\n\r\n  abstract getHourNames(): string[];\r\n\r\n  abstract getMinuteNames(): string[];\r\n\r\n  abstract addCalendarHours(date: D, months: number): D;\r\n\r\n  abstract addCalendarMinutes(date: D, months: number): D;\r\n\r\n  abstract createDatetime(year: number, month: number, date: number, hour: number, minute: number): D;\r\n\r\n  getValidDateOrNull(obj: any): D | null {\r\n    return (this.isDateInstance(obj) && this.isValid(obj)) ? obj : null;\r\n  }\r\n\r\n  compareDatetime(first: D, second: D): number {\r\n    return this.compareDate(first, second) ||\r\n      this.getHour(first) - this.getHour(second) ||\r\n      this.getMinute(first) - this.getMinute(second);\r\n  }\r\n\r\n  sameDatetime(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareDatetime(first, second);\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  sameYear(first: D, second: D) {\r\n    return first && second && this.getYear(first) === this.getYear(second);\r\n  }\r\n\r\n  sameDay(first: D, second: D) {\r\n    return first && second && this.getDate(first) === this.getDate(second) && this.sameMonthAndYear(first, second);\r\n  }\r\n\r\n  sameHour(first: D, second: D) {\r\n    return first && second && this.getHour(first) === this.getHour(second) && this.sameDay(first, second);\r\n  }\r\n\r\n  sameMinute(first: D, second: D) {\r\n    return first && second && this.getMinute(first) === this.getMinute(second) && this.sameHour(first, second);\r\n  }\r\n\r\n  sameMonthAndYear(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !(this.getYear(first) - this.getYear(second) ||\r\n          this.getMonth(first) - this.getMonth(second));\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  // delegate\r\n  clone(date: D): D {\r\n    return this._delegate.clone(date);\r\n  }\r\n\r\n  addCalendarYears(date: D, years: number): D {\r\n    return this._delegate.addCalendarYears(date, years);\r\n  }\r\n\r\n  addCalendarMonths(date: D, months: number): D {\r\n    return this._delegate.addCalendarMonths(date, months);\r\n  }\r\n\r\n  addCalendarDays(date: D, days: number): D {\r\n    return this._delegate.addCalendarDays(date, days);\r\n  }\r\n\r\n  getYear(date: D): number {\r\n    return this._delegate.getYear(date);\r\n  }\r\n\r\n  getMonth(date: D): number {\r\n    return this._delegate.getMonth(date);\r\n  }\r\n\r\n  getDate(date: D): number {\r\n    return this._delegate.getDate(date);\r\n  }\r\n\r\n  getDayOfWeek(date: D): number {\r\n    return this._delegate.getDayOfWeek(date);\r\n  }\r\n\r\n  getMonthNames(style): string[] {\r\n    return this._delegate.getMonthNames(style);\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    return this._delegate.getDateNames();\r\n  }\r\n\r\n  getDayOfWeekNames(style): string[] {\r\n    return this._delegate.getDayOfWeekNames(style);\r\n  }\r\n\r\n  getYearName(date: D): string {\r\n    return this._delegate.getYearName(date);\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return this._delegate.getFirstDayOfWeek();\r\n  }\r\n\r\n  getNumDaysInMonth(date: D): number {\r\n    return this._delegate.getNumDaysInMonth(date);\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): D {\r\n    return this._delegate.createDate(year, month, date);\r\n  }\r\n\r\n  today(): D {\r\n    return this._delegate.today();\r\n  }\r\n\r\n  parse(value: any, parseFormat: any): D | null {\r\n    return this._delegate.parse(value, parseFormat);\r\n  }\r\n\r\n  format(date: D, displayFormat: any): string {\r\n    return this._delegate.format(date, displayFormat);\r\n  }\r\n\r\n  toIso8601(date: D): string {\r\n    return this._delegate.toIso8601(date);\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return this._delegate.isDateInstance(obj);\r\n  }\r\n\r\n  isValid(date: D): boolean {\r\n    return this._delegate.isValid(date);\r\n  }\r\n\r\n  invalid(): D {\r\n    return this._delegate.invalid();\r\n  }\r\n\r\n  clampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDatetime(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDatetime(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface MatDatetimeFormats {\r\n  parse: {\r\n    dateInput?: any;\r\n    monthInput?: any;\r\n    timeInput?: any;\r\n    datetimeInput?: any;\r\n  };\r\n  display: {\r\n    dateInput: any;\r\n    monthInput: any;\r\n    timeInput: any;\r\n    datetimeInput: any;\r\n    monthYearLabel: any;\r\n    dateA11yLabel: any;\r\n    monthYearA11yLabel: any;\r\n    popupHeaderDateLabel: any;\r\n  };\r\n}\r\n\r\nexport const MAT_DATETIME_FORMATS = new InjectionToken<MatDatetimeFormats>(\"mat-datetime-formats\");\r\n","import {\r\n  Inject,\r\n  Injectable,\r\n  Optional\r\n} from \"@angular/core\";\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE\r\n} from \"@angular/material\";\r\nimport { DatetimeAdapter } from \"./datetime-adapter\";\r\n\r\n/** The default hour names to use if Intl API is not available. */\r\nconst DEFAULT_HOUR_NAMES = range(24, i => String(i));\r\n\r\n/** The default minute names to use if Intl API is not available. */\r\nconst DEFAULT_MINUTE_NAMES = range(60, i => String(i));\r\n\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class NativeDatetimeAdapter extends DatetimeAdapter<Date> {\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, _delegate: DateAdapter<Date>) {\r\n    super(_delegate);\r\n    this.setLocale(matDateLocale);\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return this.createDatetime(this.getYear(date), this.getMonth(date), this.getDate(date), this.getHour(date), this.getMinute(date));\r\n  }\r\n\r\n  getHour(date: Date): number {\r\n    return date.getHours();\r\n  }\r\n\r\n  getMinute(date: Date): number {\r\n    return date.getMinutes();\r\n  }\r\n\r\n  isInNextMonth(startDate: Date, endDate: Date): boolean {\r\n    const nextMonth = this.getDateInNextMonth(startDate);\r\n    return this.sameMonthAndYear(nextMonth, endDate);\r\n  }\r\n\r\n  createDatetime(year: number, month: number, date: number, hour: number, minute: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    if (hour < 0 || hour > 23) {\r\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\r\n    }\r\n\r\n    const result = this._createDateWithOverflow(year, month, date, hour, minute);\r\n\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() !== month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private getDateInNextMonth(date: Date) {\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1,\r\n      date.getHours(), date.getMinutes());\r\n  }\r\n\r\n  getFirstDateOfMonth(date: Date): Date {\r\n    const result = new Date();\r\n    result.setFullYear(date.getFullYear(), date.getMonth(), 1);\r\n    return result;\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    return DEFAULT_HOUR_NAMES;\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    return DEFAULT_MINUTE_NAMES;\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date), this.getHour(date), this.getMinute(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0, this.getHour(date), this.getMinute(date));\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days, this.getHour(date), this.getMinute(date));\r\n  }\r\n\r\n  addCalendarHours(date: Date, hours: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date),\r\n      this.getHour(date) + hours, this.getMinute(date));\r\n  }\r\n\r\n  addCalendarMinutes(date: Date, minutes: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date),\r\n      this.getHour(date), this.getMinute(date) + minutes);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return super.toIso8601(date) + \"T\" + [\r\n      this._2digit(date.getUTCHours()),\r\n      this._2digit(date.getUTCMinutes())\r\n    ].join(\":\");\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, \"\");\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number,\r\n                                  hours: number, minutes: number) {\r\n    const result = new Date(year, month, date, hours, minutes);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { MatDatetimeFormats } from \"./datetime-formats\";\r\n\r\nexport const MAT_NATIVE_DATETIME_FORMATS: MatDatetimeFormats = {\r\n  parse: {},\r\n  display: {\r\n    dateInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\"},\r\n    monthInput: {month: \"long\"},\r\n    datetimeInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\"},\r\n    timeInput: {hour: \"2-digit\", minute: \"2-digit\"},\r\n    monthYearLabel: {year: \"numeric\", month: \"short\"},\r\n    dateA11yLabel: {year: \"numeric\", month: \"long\", day: \"numeric\"},\r\n    monthYearA11yLabel: {year: \"numeric\", month: \"long\"},\r\n    popupHeaderDateLabel: {weekday: \"short\", month: \"short\", day: \"2-digit\"}\r\n  }\r\n};\r\n","import { NgModule } from \"@angular/core\";\r\nimport {\r\n  MatNativeDateModule,\r\n  NativeDateModule\r\n} from \"@angular/material\";\r\nimport { DatetimeAdapter } from \"./datetime-adapter\";\r\nimport { MAT_DATETIME_FORMATS } from \"./datetime-formats\";\r\nimport { NativeDatetimeAdapter } from \"./native-datetime-adapter\";\r\nimport { MAT_NATIVE_DATETIME_FORMATS } from \"./native-datetime-formats\";\r\n\r\n// tslint:disable max-classes-per-file\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [\r\n    {\r\n      provide: DatetimeAdapter,\r\n      useClass: NativeDatetimeAdapter\r\n    }\r\n  ]\r\n})\r\nexport class NativeDatetimeModule {\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    NativeDatetimeModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_NATIVE_DATETIME_FORMATS}]\r\n})\r\nexport class MatNativeDatetimeModule {\r\n}\r\n","import {\r\n  animate,\r\n  AnimationTriggerMetadata,\r\n  keyframes,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger\r\n} from \"@angular/animations\";\r\n\r\n/**\r\n * This animation fades in the background color and text content of the\r\n * select's options. It is time delayed to occur 100ms after the overlay\r\n * panel has transformed in.\r\n */\r\nexport const fadeInContent: AnimationTriggerMetadata = trigger(\"fadeInContent\", [\r\n  state(\"showing\", style({opacity: 1})),\r\n  transition(\"void => showing\", [\r\n    style({opacity: 0}),\r\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\r\n  ])\r\n]);\r\n\r\nexport const slideCalendar: AnimationTriggerMetadata = trigger(\"slideCalendar\", [\r\n  transition(\"* => left\", [\r\n    animate(180, keyframes([\r\n      style({transform: \"translateX(100%)\", offset: 0.5}),\r\n      style({transform: \"translateX(-100%)\", offset: 0.51}),\r\n      style({transform: \"translateX(0)\", offset: 1})\r\n    ]))\r\n  ]),\r\n  transition(\"* => right\", [\r\n    animate(180, keyframes([\r\n      style({transform: \"translateX(-100%)\", offset: 0.5}),\r\n      style({transform: \"translateX(100%)\", offset: 0.51}),\r\n      style({transform: \"translateX(0)\", offset: 1})\r\n    ]))\r\n  ])\r\n]);\r\n","/** @docs-private */\r\nexport function createMissingDateImplError(provider: string) {\r\n  return Error(\r\n      `MatDatetimepicker: No provider found for ${provider}. You must import one of the following ` +\r\n      `modules at your application root: MatNativeDatetimeModule, MatMomentDatetimeModule, or provide a ` +\r\n      `custom implementation.`);\r\n}\r\n","export enum MatDatetimepickerFilterType {\r\n  DATE, HOUR, MINUTE\r\n}\r\n","import {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW\r\n} from \"@angular/cdk/keycodes\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MatDatepickerIntl } from \"@angular/material\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport { slideCalendar } from \"./datetimepicker-animations\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-calendar\",\r\n  template: `<div class=\"mat-datetimepicker-calendar-header\">\r\n  <div *ngIf=\"type !== 'time'\"\r\n       class=\"mat-datetimepicker-calendar-header-year\"\r\n       [class.active]=\"_currentView == 'year'\"\r\n       (click)=\"_yearClicked()\">{{ _yearLabel }}\r\n  </div>\r\n  <div class=\"mat-datetimepicker-calendar-header-date-time\">\r\n    <span *ngIf=\"type !== 'time'\"\r\n          class=\"mat-datetimepicker-calendar-header-date\"\r\n          [class.active]=\"_currentView == 'month'\"\r\n          [class.not-clickable]=\"type === 'month'\"\r\n          (click)=\"_dateClicked()\" style=\"font-size: 0.7em;\">{{ _dateLabel }}</span>\r\n    <span *ngIf=\"type.endsWith('time')\"\r\n          class=\"mat-datetimepicker-calendar-header-time\"\r\n          [class.active]=\"_currentView == 'clock'\">\r\n      <span class=\"mat-datetimepicker-calendar-header-hours\"\r\n            [class.active]=\"_clockView == 'hour'\"\r\n            (click)=\"_hoursClicked()\">{{ _hoursLabel }}</span>:<span class=\"mat-datetimepicker-calendar-header-minutes\"\r\n                                                                     [class.active]=\"_clockView == 'minute'\"\r\n                                                                     (click)=\"_minutesClicked()\">{{ _minutesLabel }}</span>\r\n    </span>\r\n  </div>\r\n</div>\r\n<div class=\"mat-datetimepicker-calendar-content\" [ngSwitch]=\"_currentView\">\r\n  <div class=\"mat-month-content\" *ngIf=\"_currentView === 'month' || _currentView === 'year'\">\r\n    <div class=\"mat-datetimepicker-calendar-controls\">\r\n      <div class=\"mat-datetimepicker-calendar-previous-button\"\r\n           [class.disabled]=\"!_previousEnabled()\" (click)=\"_previousClicked()\"\r\n           aria-label=\"Previous month\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\r\n        </svg>\r\n      </div>\r\n      <div class=\"mat-datetimepicker-calendar-period-button\" [@slideCalendar]=\"_calendarState\"\r\n           (@slideCalendar.done)=\"_calendarStateDone()\">\r\n        <strong>{{ _monthYearLabel }}</strong>\r\n      </div>\r\n      <div class=\"mat-datetimepicker-calendar-next-button\"\r\n           [class.disabled]=\"!_nextEnabled()\" (click)=\"_nextClicked()\"\r\n           aria-label=\"Next month\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-datetimepicker-month-view *ngSwitchCase=\"'month'\"\r\n                                 [activeDate]=\"_activeDate\"\r\n                                 [type]=\"type\"\r\n                                 [selected]=\"_activeDate\"\r\n                                 [dateFilter]=\"_dateFilterForViews\"\r\n                                 (selectedChange)=\"_dateSelected($event)\"\r\n                                 (_userSelection)=\"_userSelected()\">\r\n  </mat-datetimepicker-month-view>\r\n  <mat-datetimepicker-year-view *ngSwitchCase=\"'year'\"\r\n                                [activeDate]=\"_activeDate\"\r\n                                [type]=\"type\"\r\n                                [selected]=\"_activeDate\"\r\n                                [dateFilter]=\"_dateFilterForViews\"\r\n                                (selectedChange)=\"_monthSelected($event)\"\r\n                                (_userSelection)=\"_userSelected()\">\r\n  </mat-datetimepicker-year-view>\r\n  <mat-datetimepicker-clock *ngSwitchDefault\r\n                            [startView]=\"_clockView\"\r\n                            [interval]=\"timeInterval\"\r\n                            [minDate]=\"minDate\"\r\n                            [maxDate]=\"maxDate\"\r\n                            [dateFilter]=\"dateFilter\"\r\n                            [selected]=\"_activeDate\"\r\n                            (activeDateChange)=\"_onActiveDateChange($event)\"\r\n                            (selectedChange)=\"_timeSelected($event)\"\r\n                            (_userSelection)=\"_userSelected()\">\r\n  </mat-datetimepicker-clock>\r\n  <div class=\"mat-datetimepicker-calendar-footer\">\r\n    <button mat-button color=\"primary\" (click)=\"_handleCancelButton($event)\">{{ cancelButtonLabel }}</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"_handleConfirmButton($event)\">{{ confirmButtonLabel }}</button>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.mat-datetimepicker-calendar{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block;outline:0}.mat-datetimepicker-calendar[mode=landscape]{display:flex}.mat-datetimepicker-calendar-header{padding:16px;font-size:14px;color:#fff;box-sizing:border-box}[mode=landscape] .mat-datetimepicker-calendar-header{width:150px;min-width:150px}.mat-datetimepicker-calendar-header-date-time,.mat-datetimepicker-calendar-header-year{width:100%;font-weight:500;white-space:nowrap}.mat-datetimepicker-calendar-header-date-time{font-size:30px;line-height:30px}[mode=landscape] .mat-datetimepicker-calendar-header-date-time{white-space:normal;word-wrap:break-word}.mat-datetimepicker-calendar-header-date:not(.active),.mat-datetimepicker-calendar-header-hours:not(.active),.mat-datetimepicker-calendar-header-minutes:not(.active),.mat-datetimepicker-calendar-header-year:not(.active){cursor:pointer;opacity:.6}.mat-datetimepicker-calendar-header-date.not-clickable,.mat-datetimepicker-calendar-header-hours.not-clickable,.mat-datetimepicker-calendar-header-minutes.not-clickable,.mat-datetimepicker-calendar-header-year.not-clickable{cursor:initial}.mat-datetimepicker-calendar-header-time{padding-left:8px;padding-top:5px}.mat-datetimepicker-calendar-header-time:not(.active){opacity:.6}.mat-datetimepicker-calendar-header-time:not(.active) .mat-datetimepicker-calendar-header-hours,.mat-datetimepicker-calendar-header-time:not(.active) .mat-datetimepicker-calendar-header-minutes{cursor:pointer;opacity:1}[mode=landscape] .mat-datetimepicker-calendar-header-time{display:block;padding-left:0}.mat-datetimepicker-calendar-content{width:100%;padding:0 8px 8px;outline:0;box-sizing:border-box;overflow:hidden}[mode=landscape] .mat-datetimepicker-calendar-content{padding-top:8px}.mat-datetimepicker-calendar-content>.mat-datetimepicker-calendar-footer{padding:12px;text-align:right}.mat-datetimepicker-calendar-controls{display:flex;justify-content:space-between}.mat-datetimepicker-calendar-period-button{display:inline-block;height:48px;padding:12px;outline:0;border:0;background:0 0;box-sizing:border-box}.mat-datetimepicker-calendar-next-button,.mat-datetimepicker-calendar-previous-button{display:inline-block;width:48px;height:48px;padding:12px;outline:0;border:0;cursor:pointer;background:0 0;box-sizing:border-box}.mat-datetimepicker-calendar-next-button.disabled,.mat-datetimepicker-calendar-previous-button.disabled{color:rgba(0,0,0,.38);pointer-events:none}.mat-datetimepicker-calendar-next-button svg,.mat-datetimepicker-calendar-previous-button svg{fill:currentColor;vertical-align:top}.mat-datetimepicker-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-datetimepicker-calendar-table-header{color:rgba(0,0,0,.38)}.mat-datetimepicker-calendar-table-header th{text-align:center;font-size:11px;padding:0 0 8px}@media (min-width:480px){.mat-datetimepicker-calendar[mode=auto]{display:flex}.mat-datetimepicker-calendar[mode=auto] .mat-datetimepicker-calendar-header{width:150px;min-width:150px}.mat-datetimepicker-calendar[mode=auto] .mat-datetimepicker-calendar-header-date-time{white-space:normal;word-wrap:break-word}.mat-datetimepicker-calendar[mode=auto] .mat-datetimepicker-calendar-header-time{display:block;padding-left:0}.mat-datetimepicker-calendar[mode=auto] .mat-datetimepicker-calendar-content{padding-top:8px}}`],\r\n  host: {\r\n    \"[class.mat-datetimepicker-calendar]\": \"true\",\r\n    \"tabindex\": \"0\",\r\n    \"(keydown)\": \"_handleCalendarBodyKeydown($event)\"\r\n  },\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerCalendar<D> implements AfterContentInit, OnDestroy {\r\n\r\n  private _intlChanges: Subscription;\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    return this._startAt;\r\n  }\r\n\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _startAt: D | null;\r\n\r\n  /** Whether the calendar should be started in month or year view. */\r\n  @Input() startView: \"clock\" | \"month\" | \"year\" = \"month\";\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D | null) {\r\n    this._selected = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  @Input() timeInterval: number = 1;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Date filter for the month and year views. */\r\n  _dateFilterForViews = (date: D) => {\r\n    return !!date &&\r\n      (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.DATE)) &&\r\n      (!this.minDate || this._adapter.compareDate(date, this.minDate) >= 0) &&\r\n      (!this.maxDate || this._adapter.compareDate(date, this.maxDate) <= 0);\r\n  };\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get _activeDate(): D {\r\n    return this._clampedActiveDate;\r\n  }\r\n\r\n  set _activeDate(value: D) {\r\n    const oldActiveDate = this._clampedActiveDate;\r\n    this._clampedActiveDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\r\n    if (oldActiveDate && this._clampedActiveDate && this._currentView === \"month\" &&\r\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._clampedActiveDate)) {\r\n      if (this._adapter.isInNextMonth(oldActiveDate, this._clampedActiveDate)) {\r\n        this.calendarState(\"right\");\r\n      } else {\r\n        this.calendarState(\"left\");\r\n      }\r\n      this.changeDetectorRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  private _clampedActiveDate: D;\r\n\r\n  _userSelected(): void {\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  /** Whether the calendar is in month view. */\r\n  _currentView: \"clock\" | \"month\" | \"year\" = \"month\";\r\n  _clockView: \"hour\" | \"minute\" = \"hour\";\r\n\r\n  /** The label for the current calendar view. */\r\n  get _yearLabel(): string {\r\n    return this._adapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _monthYearLabel(): string {\r\n    return this._currentView === \"month\" ? this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)] :\r\n      this._adapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _dateLabel(): string {\r\n    if (this.type === \"month\") {\r\n      return this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)];\r\n    }\r\n    return this._adapter.format(this._activeDate, this._dateFormats.display.popupHeaderDateLabel);\r\n\r\n  }\r\n\r\n  get _hoursLabel(): string {\r\n    return this._2digit(this._adapter.getHour(this._activeDate));\r\n  }\r\n\r\n  get _minutesLabel(): string {\r\n    return this._2digit(this._adapter.getMinute(this._activeDate));\r\n  }\r\n\r\n  _calendarState: string;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _intl: MatDatepickerIntl,\r\n              private _ngZone: NgZone,\r\n              @Optional() private _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\r\n              private changeDetectorRef: ChangeDetectorRef) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._activeDate = this.startAt || this._adapter.today();\r\n    this._focusActiveCell();\r\n    if (this.type === \"month\") {\r\n      this._currentView = \"year\";\r\n    } else if (this.type === \"time\") {\r\n      this._currentView = \"clock\";\r\n    } else {\r\n      this._currentView = this.startView || \"month\";\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: D): void {\r\n    this._activeDate = date;\r\n    if (this.type !== \"date\") {\r\n      this._currentView = \"clock\";\r\n    }\r\n  }\r\n\r\n  /** Handles month selection in the year view. */\r\n  _monthSelected(month: D): void {\r\n    this._activeDate = month;\r\n    if (this.type !== 'month') {\r\n      this._currentView = \"month\";\r\n      this._clockView = \"hour\";\r\n    }\r\n  }\r\n\r\n  _timeSelected(date: D): void {\r\n    this._activeDate = date;\r\n    this._clockView = \"minute\";\r\n  }\r\n\r\n  @Input() confirmButtonLabel: string;\r\n  _handleConfirmButton(event): void {\r\n    this.selectedChange.emit(this._activeDate);\r\n    this._userSelected();\r\n  }\r\n\r\n  @Input() cancelButtonLabel: string;\r\n  _handleCancelButton(event): void {\r\n    // Close dialog (datetimepicker.close())\r\n    this._userSelection.emit();\r\n\r\n  }\r\n\r\n  _onActiveDateChange(date: D) {\r\n    this._activeDate = date;\r\n  }\r\n\r\n  _yearClicked(): void {\r\n    this._currentView = \"year\";\r\n  }\r\n\r\n  _dateClicked(): void {\r\n    if (this.type !== 'month') {\r\n      this._currentView = \"month\";\r\n    }\r\n  }\r\n\r\n  _hoursClicked(): void {\r\n    this._currentView = \"clock\";\r\n    this._clockView = \"hour\";\r\n  }\r\n\r\n  _minutesClicked(): void {\r\n    this._currentView = \"clock\";\r\n    this._clockView = \"minute\";\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._activeDate = this._currentView === \"month\" ?\r\n      this._adapter.addCalendarMonths(this._activeDate, -1) :\r\n      this._adapter.addCalendarYears(this._activeDate, -1);\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._activeDate = this._currentView === \"month\" ?\r\n      this._adapter.addCalendarMonths(this._activeDate, 1) :\r\n      this._adapter.addCalendarYears(this._activeDate, 1);\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n    if (this._currentView === \"month\") {\r\n      this._handleCalendarBodyKeydownInMonthView(event);\r\n    } else if (this._currentView === \"year\") {\r\n      this._handleCalendarBodyKeydownInYearView(event);\r\n    } else {\r\n      this._handleCalendarBodyKeydownInClockView(event);\r\n    }\r\n  }\r\n\r\n  _focusActiveCell() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\r\n        this._elementRef.nativeElement.focus();\r\n      });\r\n    });\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: D, date2: D): boolean {\r\n    return this._currentView === \"month\" ?\r\n      this._adapter.getYear(date1) == this._adapter.getYear(date2) &&\r\n      this._adapter.getMonth(date1) == this._adapter.getMonth(date2) :\r\n      this._adapter.getYear(date1) == this._adapter.getYear(date2);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\r\n          1 - this._adapter.getDate(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\r\n          (this._adapter.getNumDaysInMonth(this._activeDate) -\r\n            this._adapter.getDate(this._activeDate)));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = event.altKey ?\r\n          this._adapter.addCalendarYears(this._activeDate, -1) :\r\n          this._adapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = event.altKey ?\r\n          this._adapter.addCalendarYears(this._activeDate, 1) :\r\n          this._adapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (this._dateFilterForViews(this._activeDate)) {\r\n          this._dateSelected(this._activeDate);\r\n          // Prevent unexpected default actions such as form submission.\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\r\n          -this._adapter.getMonth(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\r\n          11 - this._adapter.getMonth(this._activeDate));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\r\n        break;\r\n      case ENTER:\r\n        this._monthSelected(this._activeDate);\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInClockView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case UP_ARROW:\r\n        this._activeDate = this._clockView == \"hour\" ?\r\n          this._adapter.addCalendarHours(this._activeDate, 1) :\r\n          this._adapter.addCalendarMinutes(this._activeDate, 1);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._clockView == \"hour\" ?\r\n          this._adapter.addCalendarHours(this._activeDate, -1) :\r\n          this._adapter.addCalendarMinutes(this._activeDate, -1);\r\n        break;\r\n      case ENTER:\r\n        this._timeSelected(this._activeDate);\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes before the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _prevMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    const increment = this._adapter.getMonth(date) <= 4 ? -5 :\r\n      (this._adapter.getMonth(date) >= 7 ? -7 : -12);\r\n    return this._adapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes after the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _nextMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    const increment = this._adapter.getMonth(date) <= 4 ? 7 :\r\n      (this._adapter.getMonth(date) >= 7 ? 5 : 12);\r\n    return this._adapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  private calendarState(direction: string): void {\r\n    this._calendarState = direction;\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n  private _2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\n\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nexport class MatDatetimepickerCalendarCell {\r\n  constructor(public value: number,\r\n              public displayValue: string,\r\n              public ariaLabel: string,\r\n              public enabled: boolean) {\r\n  }\r\n}\r\n\r\n/**\r\n * An internal component used to display calendar data in a table.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"[mat-datetimepicker-calendar-body]\",\r\n  template: `<!--\r\n  If there's not enough space in the first row, create a separate label row. We mark this row as\r\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\r\n-->\r\n<tr *ngIf=\"_firstRowOffset < labelMinRequiredCells\" aria-hidden=\"true\">\r\n  <td class=\"mat-datetimepicker-calendar-body-label\" [attr.colspan]=\"numCols\" >{{ label }}</td>\r\n</tr>\r\n\r\n<!-- Create the first row separately so we can include a special spacer cell. -->\r\n<tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\">\r\n  <!--\r\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\r\n  -->\r\n  <td *ngIf=\"rowIndex === 0 && _firstRowOffset\"\r\n      aria-hidden=\"true\"\r\n      class=\"mat-datetimepicker-calendar-body-label\"\r\n      [attr.colspan]=\"_firstRowOffset\">\r\n    {{ _firstRowOffset >= labelMinRequiredCells ? label : '' }}\r\n  </td>\r\n  <td *ngFor=\"let item of row; let colIndex = index\"\r\n      role=\"gridcell\"\r\n      class=\"mat-datetimepicker-calendar-body-cell\"\r\n      [class.mat-datetimepicker-calendar-body-disabled]=\"!item.enabled\"\r\n      [class.mat-datetimepicker-calendar-body-active]=\"_isActiveCell(rowIndex, colIndex)\"\r\n      [attr.aria-label]=\"item.ariaLabel\"\r\n      [attr.aria-disabled]=\"!item.enabled || null\"\r\n      (click)=\"_cellClicked(item)\">\r\n    <div class=\"mat-datetimepicker-calendar-body-cell-content\"\r\n         [class.mat-datetimepicker-calendar-body-selected]=\"selectedValue === item.value\"\r\n         [class.mat-datetimepicker-calendar-body-today]=\"todayValue === item.value\">\r\n      {{ item.displayValue }}\r\n    </div>\r\n  </td>\r\n</tr>\r\n`,\r\n  styles: [`.mat-datetimepicker-calendar-body{font-size:13px;min-width:224px}.mat-datetimepicker-calendar-body-label{padding:7.14286% 0 7.14286% 7.14286%;height:0;line-height:0;color:rgba(0,0,0,.54);-webkit-transform:translateX(-6px);transform:translateX(-6px);text-align:left}.mat-datetimepicker-calendar-body-cell{position:relative;width:14.28571%;height:0;line-height:0;padding:7.14286% 0;text-align:center;outline:0;cursor:pointer}.mat-datetimepicker-calendar-body-disabled{cursor:default;pointer-events:none}.mat-datetimepicker-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;color:rgba(0,0,0,.87);border:1px solid transparent;border-radius:50%}.mat-datetimepicker-calendar-body-disabled>.mat-datetimepicker-calendar-body-cell-content:not(.mat-datetimepicker-calendar-body-selected){color:rgba(0,0,0,.38)}.mat-calendar:focus .mat-datetimepicker-calendar-body-active>.mat-datetimepicker-calendar-body-cell-content:not(.mat-datetimepicker-calendar-body-selected),:not(.mat-datetimepicker-calendar-body-disabled):hover>.mat-datetimepicker-calendar-body-cell-content:not(.mat-datetimepicker-calendar-body-selected){background-color:rgba(0,0,0,.12)}.mat-datetimepicker-calendar-body-disabled>.mat-datetimepicker-calendar-body-today:not(.mat-datetimepicker-calendar-body-selected){border-color:rgba(0,0,0,.18)}[dir=rtl] .mat-datetimepicker-calendar-body-label{padding:0 7.14286% 0 0;-webkit-transform:translateX(6px);transform:translateX(6px);text-align:right}`],\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-calendar-body\"\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerCalendarBody {\r\n  /** The label for the table. (e.g. \"Jan 2017\"). */\r\n  @Input() label: string;\r\n\r\n  /** The cells to display in the table. */\r\n  @Input() rows: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The value in the table that corresponds to today. */\r\n  @Input() todayValue: number;\r\n\r\n  /** The value in the table that is currently selected. */\r\n  @Input() selectedValue: number;\r\n\r\n  /** The minimum number of free cells needed to fit the label in the first row. */\r\n  @Input() labelMinRequiredCells: number;\r\n\r\n  /** The number of columns in the table. */\r\n  @Input() numCols = 7;\r\n\r\n  /** Whether to allow selection of disabled cells. */\r\n  @Input() allowDisabledSelection = false;\r\n\r\n  /** The cell number of the active cell in the table. */\r\n  @Input() activeCell = 0;\r\n\r\n  /** Emits when a new value is selected. */\r\n  @Output() selectedValueChange = new EventEmitter<number>();\r\n\r\n  _cellClicked(cell: MatDatetimepickerCalendarCell): void {\r\n    if (!this.allowDisabledSelection && !cell.enabled) {\r\n      return;\r\n    }\r\n    this.selectedValueChange.emit(cell.value);\r\n  }\r\n\r\n  /** The number of blank cells to put at the beginning for the first row. */\r\n  get _firstRowOffset(): number {\r\n    return this.rows && this.rows.length && this.rows[0].length ?\r\n      this.numCols - this.rows[0].length : 0;\r\n  }\r\n\r\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n    let cellNumber = rowIndex * this.numCols + colIndex;\r\n\r\n    // Account for the fact that the first row may not have as many cells.\r\n    if (rowIndex) {\r\n      cellNumber -= this._firstRowOffset;\r\n    }\r\n\r\n    return cellNumber === this.activeCell;\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output\r\n} from \"@angular/core\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\n\r\nexport const CLOCK_RADIUS = 50;\r\nexport const CLOCK_INNER_RADIUS = 27.5;\r\nexport const CLOCK_OUTER_RADIUS = 41.25;\r\nexport const CLOCK_TICK_RADIUS = 7.0833;\r\n\r\nexport type ClockView = \"hour\" | \"minute\";\r\n\r\n/**\r\n * A clock that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-clock\",\r\n  template: `<div class=\"mat-datetimepicker-clock\">\r\n  <div class=\"mat-datetimepicker-clock-center\"></div>\r\n  <div class=\"mat-datetimepicker-clock-hand\" [ngStyle]=\"_hand\"></div>\r\n  <div class=\"mat-datetimepicker-clock-hours\" [class.active]=\"_hourView\">\r\n    <div *ngFor=\"let item of _hours\"\r\n         class=\"mat-datetimepicker-clock-cell\"\r\n         [class.mat-datetimepicker-clock-cell-selected]=\"_selectedHour == item.value\"\r\n         [class.mat-datetimepicker-clock-cell-disabled]=\"!item.enabled\"\r\n         [style.top]=\"item.top+'%'\"\r\n         [style.left]=\"item.left+'%'\"\r\n         [style.fontSize]=\"item.fontSize\">{{ item.displayValue }}</div>\r\n  </div>\r\n  <div class=\"mat-datetimepicker-clock-minutes\" [class.active]=\"!_hourView\">\r\n    <div *ngFor=\"let item of _minutes\"\r\n         class=\"mat-datetimepicker-clock-cell\"\r\n         [class.mat-datetimepicker-clock-cell-selected]=\"_selectedMinute == item.value\"\r\n         [class.mat-datetimepicker-clock-cell-disabled]=\"!item.enabled\"\r\n         [style.top]=\"item.top+'%'\"\r\n         [style.left]=\"item.left+'%'\">{{ item.displayValue }}</div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host{position:relative;display:block;min-width:224px;margin:8px;font-size:14px;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.mat-datetimepicker-clock{position:relative;width:100%;height:0;padding-top:100%;background-color:#e0e0e0;border-radius:50%}.mat-datetimepicker-clock-center{position:absolute;top:50%;left:50%;width:2%;height:2%;margin:-1%;border-radius:50%}.mat-datetimepicker-clock-hand{position:absolute;top:0;right:0;bottom:0;left:0;width:1px;margin:0 auto;-webkit-transform-origin:bottom;transform-origin:bottom}.mat-datetimepicker-clock-hand::before{content:'';position:absolute;top:-4px;left:-4px;width:8px;height:8px;border-radius:50%}.mat-datetimepicker-clock-hours,.mat-datetimepicker-clock-minutes{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;visibility:hidden;transition:350ms;-webkit-transform:scale(1.2);transform:scale(1.2)}.mat-datetimepicker-clock-hours.active,.mat-datetimepicker-clock-minutes.active{opacity:1;visibility:visible;-webkit-transform:scale(1);transform:scale(1)}.mat-datetimepicker-clock-minutes{-webkit-transform:scale(.8);transform:scale(.8)}.mat-datetimepicker-clock-cell{position:absolute;display:flex;width:14.1666%;height:14.1666%;color:rgba(0,0,0,.87);justify-content:center;box-sizing:border-box;border-radius:50%;align-items:center;cursor:pointer}.mat-datetimepicker-clock-cell:not(.mat-datetimepicker-clock-cell-selected):not(.mat-datetimepicker-clock-cell-disabled):hover{background-color:rgba(0,0,0,.1)}.mat-datetimepicker-clock-cell.mat-datetimepicker-clock-cell-disabled{color:rgba(0,0,0,.38);pointer-events:none}.mat-datetimepicker-clock-cell.mat-datetimepicker-clock-cell-selected{color:#fff}`],\r\n  host: {\r\n    \"role\": \"clock\",\r\n    \"(mousedown)\": \"_handleMousedown($event)\"\r\n  }\r\n})\r\nexport class MatDatetimepickerClock<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  /**\r\n   * The date to display in this clock view.\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\r\n    if (!this._adapter.sameMinute(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D | null) {\r\n    this._selected = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n    if (this._selected) {\r\n      this.activeDate = this._selected;\r\n    }\r\n  }\r\n\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  private _timeChanged = false;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  /** Whether the clock should be started in hour or minute view. */\r\n  @Input()\r\n  set startView(value: ClockView) {\r\n    this._hourView = value != \"minute\";\r\n  }\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  @Input() interval: number = 1;\r\n\r\n  @Input() twelvehour: boolean = false;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  @Output() activeDateChange = new EventEmitter<D>();\r\n\r\n  /** Hours and Minutes representing the clock view. */\r\n  _hours: Array<Object> = [];\r\n  _minutes: Array<Object> = [];\r\n\r\n  /** Whether the clock is in hour view. */\r\n  _hourView: boolean = true;\r\n\r\n  _selectedHour: number;\r\n  _selectedMinute: number;\r\n\r\n  get _hand(): any {\r\n    this._selectedHour = this._adapter.getHour(this.activeDate);\r\n    this._selectedMinute = this._adapter.getMinute(this.activeDate);\r\n    let deg = 0;\r\n    let radius = CLOCK_OUTER_RADIUS;\r\n    if (this._hourView) {\r\n      let outer = this._selectedHour > 0 && this._selectedHour < 13;\r\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n      if (this.twelvehour) {\r\n        radius = CLOCK_OUTER_RADIUS;\r\n      }\r\n      deg = Math.round(this._selectedHour * (360 / (24 / 2)));\r\n    } else {\r\n      deg = Math.round(this._selectedMinute * (360 / 60));\r\n    }\r\n    return {\r\n      \"transform\": `rotate(${deg}deg)`,\r\n      \"height\": `${radius}%`,\r\n      \"margin-top\": `${50 - radius}%`\r\n    };\r\n  }\r\n\r\n  private mouseMoveListener: any;\r\n  private mouseUpListener: any;\r\n\r\n  constructor(private _element: ElementRef,\r\n              private _adapter: DatetimeAdapter<D>) {\r\n    this.mouseMoveListener = (event: any) => {\r\n      this._handleMousemove(event);\r\n    };\r\n    this.mouseUpListener = () => {\r\n      this._handleMouseup();\r\n    };\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.activeDate = this._activeDate || this._adapter.today();\r\n    this._init();\r\n  }\r\n\r\n  /** Handles mousedown events on the clock body. */\r\n  _handleMousedown(event: any) {\r\n    this._timeChanged = false;\r\n    this.setTime(event);\r\n    document.addEventListener(\"mousemove\", this.mouseMoveListener);\r\n    document.addEventListener(\"touchmove\", this.mouseMoveListener);\r\n    document.addEventListener(\"mouseup\", this.mouseUpListener);\r\n    document.addEventListener(\"touchend\", this.mouseUpListener);\r\n  }\r\n\r\n  _handleMousemove(event: any) {\r\n    event.preventDefault();\r\n    this.setTime(event);\r\n  }\r\n\r\n  _handleMouseup() {\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveListener);\r\n    document.removeEventListener(\"touchmove\", this.mouseMoveListener);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpListener);\r\n    document.removeEventListener(\"touchend\", this.mouseUpListener);\r\n    if (this._timeChanged) {\r\n      this.selectedChange.emit(this.activeDate);\r\n    }\r\n  }\r\n\r\n  /** Initializes this clock view. */\r\n  private _init() {\r\n    this._hours.length = 0;\r\n    this._minutes.length = 0;\r\n\r\n    let hourNames = this._adapter.getHourNames();\r\n    let minuteNames = this._adapter.getMinuteNames();\r\n\r\n    if (this.twelvehour) {\r\n      for (let i = 1; i < (hourNames.length / 2) + 1; i++) {\r\n        let radian = i / 6 * Math.PI;\r\n        let radius = CLOCK_OUTER_RADIUS;\r\n        const date = this._adapter.createDatetime(\r\n          this._adapter.getYear(this.activeDate),\r\n          this._adapter.getMonth(this.activeDate),\r\n          this._adapter.getDate(this.activeDate), i + 1, 0);\r\n        let enabled =\r\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0);\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? \"00\" : hourNames[i],\r\n          enabled: enabled,\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = 0; i < hourNames.length; i++) {\r\n        let radian = i / 6 * Math.PI;\r\n        let outer = i > 0 && i < 13,\r\n          radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n        const date = this._adapter.createDatetime(\r\n          this._adapter.getYear(this.activeDate),\r\n          this._adapter.getMonth(this.activeDate),\r\n          this._adapter.getDate(this.activeDate), i, 0);\r\n        let enabled =\r\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\r\n          (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.HOUR));\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? \"00\" : hourNames[i],\r\n          enabled: enabled,\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\r\n          fontSize: i > 0 && i < 13 ? \"\" : \"80%\"\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < minuteNames.length; i += 5) {\r\n      let radian = i / 30 * Math.PI;\r\n      const date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), i);\r\n      let enabled =\r\n        (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n        (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\r\n        (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.MINUTE));\r\n      this._minutes.push({\r\n        value: i,\r\n        displayValue: i === 0 ? \"00\" : minuteNames[i],\r\n        enabled: enabled,\r\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\r\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set Time\r\n   * @param event\r\n   */\r\n  private setTime(event: any) {\r\n    let trigger = this._element.nativeElement;\r\n    let triggerRect = trigger.getBoundingClientRect();\r\n    let width = trigger.offsetWidth;\r\n    let height = trigger.offsetHeight;\r\n    let pageX = event.pageX !== undefined ? event.pageX : event.touches[0].pageX;\r\n    let pageY = event.pageY !== undefined ? event.pageY : event.touches[0].pageY;\r\n    let x = (width / 2) - (pageX - triggerRect.left - window.pageXOffset);\r\n    let y = (height / 2) - (pageY - triggerRect.top - window.pageYOffset);\r\n    let radian = Math.atan2(-x, y);\r\n    let unit = Math.PI / (this._hourView ? 6 : (this.interval ? (30 / this.interval) : 30));\r\n    let z = Math.sqrt(x * x + y * y);\r\n    let outer = this._hourView && z > ((width * (CLOCK_OUTER_RADIUS / 100)) +\r\n      (width * (CLOCK_INNER_RADIUS / 100))) / 2;\r\n\r\n    if (radian < 0) {\r\n      radian = Math.PI * 2 + radian;\r\n    }\r\n    let value = Math.round(radian / unit);\r\n\r\n    let date;\r\n    if (this._hourView) {\r\n      if (this.twelvehour) {\r\n        value = value === 0 ? 12 : value;\r\n      } else {\r\n        if (value === 12) {\r\n          value = 0;\r\n        }\r\n        value = outer ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\r\n      }\r\n      date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), value, this._adapter.getMinute(this.activeDate));\r\n    } else {\r\n      if (this.interval) {\r\n        value *= this.interval;\r\n      }\r\n      if (value === 60) {\r\n        value = 0;\r\n      }\r\n      date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), value);\r\n    }\r\n\r\n    const clamped = this._adapter.clampDate(date, this.minDate, this.maxDate);\r\n    if (date === clamped) {\r\n      this._timeChanged = true;\r\n      this.activeDate = clamped;\r\n      this.activeDateChange.emit(this.activeDate);\r\n    }\r\n  }\r\n}\r\n","import { Directionality } from \"@angular/cdk/bidi\";\r\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\r\nimport { ESCAPE } from \"@angular/cdk/keycodes\";\r\nimport {\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  PositionStrategy\r\n} from \"@angular/cdk/overlay\";\r\nimport { ComponentPortal } from \"@angular/cdk/portal\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MAT_DATEPICKER_SCROLL_STRATEGY } from \"@angular/material\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimepickerCalendar } from \"./calendar\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\nimport { MatDatetimepickerInput } from \"./datetimepicker-input\";\r\n\r\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datetimepickerUid = 0;\r\n\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-content\",\r\n  template: `<mat-datetimepicker-calendar class=\"mat-typography\" cdkTrapFocus\r\n              [id]=\"datetimepicker.id\"\r\n              [attr.mode]=\"datetimepicker.mode\"\r\n              [startView]=\"datetimepicker.startView\"\r\n              [type]=\"datetimepicker.type\"\r\n              [timeInterval]=\"datetimepicker.timeInterval\"\r\n              [minDate]=\"datetimepicker._minDate\"\r\n              [maxDate]=\"datetimepicker._maxDate\"\r\n              [dateFilter]=\"datetimepicker._dateFilter\"\r\n              [selected]=\"datetimepicker._selected\"\r\n              [startAt]=\"datetimepicker.startAt\"\r\n              [confirmButtonLabel]=\"datetimepicker.confirmButtonLabel\"\r\n              [cancelButtonLabel]=\"datetimepicker.cancelButtonLabel\"\r\n              (selectedChange)=\"datetimepicker._select($event)\"\r\n              (_userSelection)=\"datetimepicker.close()\">\r\n</mat-datetimepicker-calendar>\r\n`,\r\n  styles: [`.mat-datetimepicker-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);display:block;background-color:#fff;border-radius:2px;overflow:hidden}.mat-datetimepicker-calendar{width:296px;height:auto}.mat-datetimepicker-calendar[mode=landscape]{width:446px;height:auto}@media (min-width:480px){.mat-datetimepicker-calendar[mode=auto]{width:446px;height:auto}}.mat-datetimepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);display:block;box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.48}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.6)}.mat-datetimepicker-dialog .mat-dialog-container{padding:0}`],\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-content\",\r\n    \"[class.mat-datetimepicker-content-touch]\": \"datetimepicker?.touchUi\",\r\n    \"(keydown)\": \"_handleKeydown($event)\"\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerContent<D> implements AfterContentInit {\r\n  datetimepicker: MatDatetimepicker<D>;\r\n\r\n  @ViewChild(MatDatetimepickerCalendar) _calendar: MatDatetimepickerCalendar<D>;\r\n\r\n  ngAfterContentInit() {\r\n    this._calendar._focusActiveCell();\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event on datepicker content.\r\n   * @param event The event.\r\n   */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE) {\r\n      this.datetimepicker.close();\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"mat-datetimepicker\",\r\n  exportAs: \"matDatetimepicker\",\r\n  template: \"\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatDatetimepicker<D> implements OnDestroy {\r\n  /** The date to open the calendar to initially. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n    // selected value is.\r\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\r\n  }\r\n\r\n  set startAt(date: D | null) {\r\n    this._startAt = this._dateAdapter.getValidDateOrNull(date);\r\n  }\r\n\r\n  private _startAt: D | null;\r\n\r\n  /** The view that the calendar should start in. */\r\n  @Input() startView: \"clock\" | \"month\" | \"year\" = \"month\";\r\n  @Input() mode: \"auto\" | \"portrait\" | \"landscape\" = \"auto\";\r\n  @Input() timeInterval: number = 1;\r\n\r\n  @Input()\r\n  get openOnFocus(): boolean { return this._openOnFocus; }\r\n  set openOnFocus(value: boolean) { this._openOnFocus = coerceBooleanProperty(value); }\r\n  private _openOnFocus: boolean;\r\n\r\n  _handleFocus() {\r\n    if (!this.opened && this.openOnFocus) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: \"date\" | \"time\" | \"month\" | \"datetime\") {\r\n    this._type = value || \"date\";\r\n  }\r\n\r\n  private _type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  /**\r\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n   * than a popup and elements have more padding to allow for bigger touch targets.\r\n   */\r\n  @Input()\r\n  get touchUi(): boolean {\r\n    return this._touchUi;\r\n  }\r\n\r\n  set touchUi(value: boolean) {\r\n    this._touchUi = coerceBooleanProperty(value);\r\n  }\r\n\r\n  private _touchUi = false;\r\n\r\n  /** Whether the datepicker pop-up should be disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined && this._datepickerInput ?\r\n      this._datepickerInput.disabled : !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.next(newValue);\r\n    }\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /**\r\n   * Emits new selected date when selected date changes.\r\n   * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\r\n   */\r\n  @Output() selectedChanged = new EventEmitter<D>();\r\n\r\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\r\n  @Input() panelClass: string | string[];\r\n\r\n  @Input() confirmButtonLabel = 'Confirm';\r\n  @Input() cancelButtonLabel = 'Cancel';\r\n\r\n  /** Emits when the datepicker has been opened. */\r\n  @Output(\"opened\") openedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Emits when the datepicker has been closed. */\r\n  @Output(\"closed\") closedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Whether the calendar is open. */\r\n  opened = false;\r\n\r\n  /** The id for the datepicker calendar. */\r\n  id = `mat-datetimepicker-${datetimepickerUid++}`;\r\n\r\n  /** The currently selected date. */\r\n  get _selected(): D | null {\r\n    return this._validSelected;\r\n  }\r\n\r\n  set _selected(value: D | null) {\r\n    this._validSelected = value;\r\n  }\r\n\r\n  private _validSelected: D | null = null;\r\n\r\n  /** The minimum selectable date. */\r\n  get _minDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.min;\r\n  }\r\n\r\n  /** The maximum selectable date. */\r\n  get _maxDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.max;\r\n  }\r\n\r\n  get _dateFilter(): (date: D | null, type: MatDatetimepickerFilterType) => boolean {\r\n    return this._datepickerInput && this._datepickerInput._dateFilter;\r\n  }\r\n\r\n  /** A reference to the overlay when the calendar is opened as a popup. */\r\n  private _popupRef: OverlayRef;\r\n\r\n  /** A reference to the dialog when the calendar is opened as a dialog. */\r\n  private _dialogRef: MatDialogRef<any> | null;\r\n\r\n  /** A portal containing the calendar for this datepicker. */\r\n  private _calendarPortal: ComponentPortal<MatDatetimepickerContent<D>>;\r\n\r\n  /** The element that was focused before the datepicker was opened. */\r\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n  private _inputSubscription = Subscription.EMPTY;\r\n\r\n  /** The input element this datepicker is associated with. */\r\n  _datepickerInput: MatDatetimepickerInput<D>;\r\n\r\n  /** Emits when the datepicker is disabled. */\r\n  _disabledChange = new Subject<boolean>();\r\n\r\n  constructor(private _dialog: MatDialog,\r\n              private _overlay: Overlay,\r\n              private _ngZone: NgZone,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _dateAdapter: DatetimeAdapter<D>,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError(\"DateAdapter\");\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._inputSubscription.unsubscribe();\r\n    this._disabledChange.complete();\r\n\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n    }\r\n  }\r\n\r\n  /** Selects the given date */\r\n  _select(date: D): void {\r\n    const oldValue = this._selected;\r\n    this._selected = date;\r\n    if (!this._dateAdapter.sameDatetime(oldValue, this._selected)) {\r\n      // tslint:disable-next-line deprecation\r\n      this.selectedChanged.emit(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an input with this datepicker.\r\n   * @param input The datepicker input to register with this datepicker.\r\n   */\r\n  _registerInput(input: MatDatetimepickerInput<D>): void {\r\n    if (this._datepickerInput) {\r\n      throw Error(\"A MatDatepicker can only be associated with a single input.\");\r\n    }\r\n    this._datepickerInput = input;\r\n    this._inputSubscription =\r\n      this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\r\n  }\r\n\r\n  /** Open the calendar. */\r\n  open(): void {\r\n    if (this.opened || this.disabled) {\r\n      return;\r\n    }\r\n    if (!this._datepickerInput) {\r\n      throw Error(\"Attempted to open an MatDatepicker with no associated input.\");\r\n    }\r\n    if (this._document) {\r\n      this._focusedElementBeforeOpen = this._document.activeElement;\r\n    }\r\n\r\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n    this.opened = true;\r\n    this.openedStream.emit();\r\n  }\r\n\r\n  /** Close the calendar. */\r\n  close(): void {\r\n    if (!this.opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._dialogRef) {\r\n      this._dialogRef.close();\r\n      this._dialogRef = null;\r\n    }\r\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n      this._calendarPortal.detach();\r\n    }\r\n\r\n    const completeClose = () => {\r\n      // The `_opened` could've been reset already if\r\n      // we got two events in quick succession.\r\n      if (this.opened) {\r\n        this.opened = false;\r\n        this.closedStream.emit();\r\n        this._focusedElementBeforeOpen = null;\r\n      }\r\n    };\r\n\r\n    if (this._focusedElementBeforeOpen &&\r\n      typeof this._focusedElementBeforeOpen.focus === \"function\") {\r\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n      // able to close the calendar at all. We work around it by making the logic, that marks\r\n      // the datepicker as closed, async as well.\r\n      this._focusedElementBeforeOpen.focus();\r\n      setTimeout(completeClose);\r\n    } else {\r\n      completeClose();\r\n    }\r\n  }\r\n\r\n  /** Open the calendar as a dialog. */\r\n  private _openAsDialog(): void {\r\n    this._dialogRef = this._dialog.open(MatDatetimepickerContent, {\r\n      direction: this._dir ? this._dir.value : \"ltr\",\r\n      viewContainerRef: this._viewContainerRef,\r\n      panelClass: \"mat-datetimepicker-dialog\"\r\n    });\r\n    this._dialogRef.afterClosed().subscribe(() => this.close());\r\n    this._dialogRef.componentInstance.datetimepicker = this;\r\n  }\r\n\r\n  /** Open the calendar as a popup. */\r\n  private _openAsPopup(): void {\r\n    if (!this._calendarPortal) {\r\n      this._calendarPortal = new ComponentPortal<MatDatetimepickerContent<D>>(MatDatetimepickerContent, this._viewContainerRef);\r\n    }\r\n\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      const componentRef: ComponentRef<MatDatetimepickerContent<D>> =\r\n        this._popupRef.attach(this._calendarPortal);\r\n      componentRef.instance.datetimepicker = this;\r\n\r\n      // Update the position once the calendar has rendered.\r\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\r\n        this._popupRef.updatePosition();\r\n      });\r\n    }\r\n\r\n    this._popupRef.backdropClick().subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this._createPopupPositionStrategy(),\r\n      hasBackdrop: true,\r\n      backdropClass: \"mat-overlay-transparent-backdrop\",\r\n      direction: this._dir ? this._dir.value : \"ltr\",\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: \"mat-datetimepicker-popup\"\r\n    });\r\n\r\n    this._popupRef = this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  /** Create the popup PositionStrategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    return this._overlay.position()\r\n      .connectedTo(this._datepickerInput.getPopupConnectionElementRef(),\r\n        {originX: \"start\", originY: \"bottom\"},\r\n        {overlayX: \"start\", overlayY: \"top\"}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: \"start\", originY: \"top\"},\r\n        {overlayX: \"start\", overlayY: \"bottom\"}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: \"end\", originY: \"bottom\"},\r\n        {overlayX: \"end\", overlayY: \"top\"}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: \"end\", originY: \"top\"},\r\n        {overlayX: \"end\", overlayY: \"bottom\"}\r\n      );\r\n  }\r\n}\r\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\r\nimport { DOWN_ARROW } from \"@angular/cdk/keycodes\";\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output\r\n} from \"@angular/core\";\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { MAT_INPUT_VALUE_ACCESSOR } from \"@angular/material\";\r\nimport { MatFormField } from \"@angular/material/form-field\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport { MatDatetimepicker } from \"./datetimepicker\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\n\r\n// tslint:disable no-use-before-declare\r\n\r\nexport const MAT_DATETIMEPICKER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatDatetimepickerInput),\r\n  multi: true\r\n};\r\n\r\nexport const MAT_DATETIMEPICKER_VALIDATORS: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => MatDatetimepickerInput),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * An event used for datepicker input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\r\n */\r\nexport class MatDatetimepickerInputEvent<D> {\r\n  /** The new value for the target datepicker input. */\r\n  value: D | null;\r\n\r\n  constructor(public target: MatDatetimepickerInput<D>, public targetElement: HTMLElement) {\r\n    this.value = this.target.value;\r\n  }\r\n}\r\n\r\n/** Directive used to connect an input to a MatDatepicker. */\r\n@Directive({\r\n  selector: \"input[matDatetimepicker]\",\r\n  providers: [\r\n    MAT_DATETIMEPICKER_VALUE_ACCESSOR,\r\n    MAT_DATETIMEPICKER_VALIDATORS,\r\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatetimepickerInput},\r\n  ],\r\n  host: {\r\n    \"[attr.aria-haspopup]\": \"true\",\r\n    \"[attr.aria-owns]\": \"(_datepicker?.opened && _datepicker.id) || null\",\r\n    \"[attr.min]\": \"min ? _dateAdapter.toIso8601(min) : null\",\r\n    \"[attr.max]\": \"max ? _dateAdapter.toIso8601(max) : null\",\r\n    \"[disabled]\": \"disabled\",\r\n    \"(focus)\": \"_datepicker._handleFocus()\",\r\n    \"(input)\": \"_onInput($event.target.value)\",\r\n    \"(change)\": \"_onChange()\",\r\n    \"(blur)\": \"_onBlur()\",\r\n    \"(keydown)\": \"_onKeydown($event)\"\r\n  },\r\n  exportAs: \"matDatepickerInput\"\r\n})\r\nexport class MatDatetimepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\r\n  Validator {\r\n  /** The datepicker that this input is associated with. */\r\n  @Input()\r\n  set matDatetimepicker(value: MatDatetimepicker<D>) {\r\n    this.registerDatepicker(value);\r\n  }\r\n\r\n  _datepicker: MatDatetimepicker<D>;\r\n\r\n  private registerDatepicker(value: MatDatetimepicker<D>) {\r\n    if (value) {\r\n      this._datepicker = value;\r\n      this._datepicker._registerInput(this);\r\n    }\r\n  }\r\n\r\n  @Input() set matDatepickerFilter(filter: (date: D | null, type: MatDatetimepickerFilterType) => boolean) {\r\n    this._dateFilter = filter;\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  _dateFilter: (date: D | null, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  /** The value of the input. */\r\n  @Input()\r\n  get value(): D | null {\r\n    return this._value;\r\n  }\r\n\r\n  set value(value: D | null) {\r\n    value = this._dateAdapter.deserialize(value);\r\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\r\n    value = this._dateAdapter.getValidDateOrNull(value);\r\n    const oldDate = this.value;\r\n    this._value = value;\r\n    this._formatValue(value);\r\n\r\n    // use timeout to ensure the datetimepicker is instantiated and we get the correct format\r\n    setTimeout(() => {\r\n      if (!this._dateAdapter.sameDatetime(oldDate, value)) {\r\n        this._valueChange.emit(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getDisplayFormat() {\r\n    switch (this._datepicker.type) {\r\n      case \"date\":\r\n        return this._dateFormats.display.dateInput;\r\n      case \"datetime\":\r\n        return this._dateFormats.display.datetimeInput;\r\n      case \"time\":\r\n        return this._dateFormats.display.timeInput;\r\n      case \"month\":\r\n        return this._dateFormats.display.monthInput;\r\n    }\r\n  }\r\n\r\n  private getParseFormat() {\r\n    let parseFormat;\r\n\r\n    switch (this._datepicker.type) {\r\n      case \"date\":\r\n        parseFormat = this._dateFormats.parse.dateInput;\r\n        break;\r\n      case \"datetime\":\r\n        parseFormat = this._dateFormats.parse.datetimeInput;\r\n        break;\r\n      case \"time\":\r\n        parseFormat = this._dateFormats.parse.timeInput;\r\n        break;\r\n      case \"month\":\r\n        parseFormat = this._dateFormats.parse.monthInput;\r\n        break;\r\n    }\r\n    if (!parseFormat) {\r\n      parseFormat = this._dateFormats.parse.dateInput;\r\n    }\r\n\r\n    return parseFormat;\r\n  }\r\n\r\n  private _value: D | null;\r\n\r\n  /** The minimum valid date. */\r\n  @Input()\r\n  get min(): D | null {\r\n    return this._min;\r\n  }\r\n\r\n  set min(value: D | null) {\r\n    this._min = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _min: D | null;\r\n\r\n  /** The maximum valid date. */\r\n  @Input()\r\n  get max(): D | null {\r\n    return this._max;\r\n  }\r\n\r\n  set max(value: D | null) {\r\n    this._max = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _max: D | null;\r\n\r\n  /** Whether the datepicker-input is disabled. */\r\n  @Input()\r\n  get disabled() {\r\n    return !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (this._disabled !== newValue) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.emit(newValue);\r\n    }\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /** Emits when a `change` event is fired on this `<input>`. */\r\n  @Output() dateChange = new EventEmitter<MatDatetimepickerInputEvent<D>>();\r\n\r\n  /** Emits when an `input` event is fired on this `<input>`. */\r\n  @Output() dateInput = new EventEmitter<MatDatetimepickerInputEvent<D>>();\r\n\r\n  /** Emits when the value changes (either due to user input or programmatic change). */\r\n  _valueChange = new EventEmitter<D | null>();\r\n\r\n  /** Emits when the disabled state has changed */\r\n  _disabledChange = new EventEmitter<boolean>();\r\n\r\n  _onTouched = () => {\r\n  }\r\n\r\n  private _cvaOnChange: (value: any) => void = () => {\r\n  }\r\n\r\n  private _validatorOnChange = () => {\r\n  }\r\n\r\n  private _datepickerSubscription = Subscription.EMPTY;\r\n\r\n  private _localeSubscription = Subscription.EMPTY;\r\n\r\n  /** The form control validator for whether the input parses. */\r\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n    return this._lastValueValid ?\r\n      null : {\"matDatepickerParse\": {\"text\": this._elementRef.nativeElement.value}};\r\n  }\r\n\r\n  /** The form control validator for the min date. */\r\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.min || !controlValue ||\r\n      this._dateAdapter.compareDatetime(this.min, controlValue) <= 0) ?\r\n      null : {\"matDatepickerMin\": {\"min\": this.min, \"actual\": controlValue}};\r\n  }\r\n\r\n  /** The form control validator for the max date. */\r\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.max || !controlValue ||\r\n      this._dateAdapter.compareDatetime(this.max, controlValue) >= 0) ?\r\n      null : {\"matDatepickerMax\": {\"max\": this.max, \"actual\": controlValue}};\r\n  }\r\n\r\n  /** The form control validator for the date filter. */\r\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue, MatDatetimepickerFilterType.DATE) ?\r\n      null : {\"matDatepickerFilter\": true};\r\n  }\r\n\r\n  /** The combined form control validator for this input. */\r\n  private _validator: ValidatorFn | null =\r\n    Validators.compose(\r\n      [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\r\n\r\n  /** Whether the last value set on the input was valid. */\r\n  private _lastValueValid = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              @Optional() public _dateAdapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\r\n              @Optional() private _formField: MatFormField) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    // Update the displayed date when the locale changes.\r\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\r\n      this.value = this.value;\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this._datepicker) {\r\n      // tslint:disable-next-line deprecation\r\n      this._datepickerSubscription = this._datepicker.selectedChanged.subscribe((selected: D) => {\r\n          this.value = selected;\r\n          this._cvaOnChange(selected);\r\n          this._onTouched();\r\n          this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n          this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._datepickerSubscription.unsubscribe();\r\n    this._localeSubscription.unsubscribe();\r\n    this._valueChange.complete();\r\n    this._disabledChange.complete();\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._validatorOnChange = fn;\r\n  }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    return this._validator ? this._validator(c) : null;\r\n  }\r\n\r\n  /**\r\n   * Gets the element that the datepicker popup should be connected to.\r\n   * @return The element to connect the popup to.\r\n   */\r\n  getPopupConnectionElementRef(): ElementRef {\r\n    return this._formField ? this._formField.underlineRef : this._elementRef;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  writeValue(value: D): void {\r\n    this.value = value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._cvaOnChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n      this._datepicker.open();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onInput(value: string) {\r\n    let date = this._dateAdapter.parse(value, this.getParseFormat());\r\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\r\n    date = this._dateAdapter.getValidDateOrNull(date);\r\n    this._value = date;\r\n    this._cvaOnChange(date);\r\n    this._valueChange.emit(date);\r\n    this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  _onChange() {\r\n    this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  /** Handles blur events on the input. */\r\n  _onBlur() {\r\n    // Reformat the input only if we have a valid value.\r\n    if (this.value) {\r\n      this._formatValue(this.value);\r\n    }\r\n\r\n    this._onTouched();\r\n  }\r\n\r\n   /** Formats a value and sets it on the input element. */\r\n   private _formatValue(value: D | null) {\r\n     this._elementRef.nativeElement.value =\r\n       value ? this._dateAdapter.format(value, this.getDisplayFormat()) : \"\";\r\n   }\r\n}\r\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MatDatepickerIntl } from \"@angular/material\";\r\nimport { merge, of as observableOf, Subscription } from \"rxjs\";\r\nimport { MatDatetimepicker } from \"./datetimepicker\";\r\n\r\n@Component({\r\n  selector: \"mat-datetimepicker-toggle\",\r\n  template: `<button mat-icon-button type=\"button\" [attr.aria-label]=\"_intl.openCalendarLabel\"\r\n        [disabled]=\"disabled\" (click)=\"_open($event)\">\r\n  <mat-icon [ngSwitch]=\"datetimepicker.type\">\r\n    <svg *ngSwitchCase=\"'time'\" viewBox=\"0 0 24 24\" width=\"100%\" height=\"100%\" fill=\"currentColor\"\r\n            style=\"vertical-align: top\" focusable=\"false\">\r\n      <path d=\"M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z\"></path>\r\n    </svg>\r\n    <svg *ngSwitchCase=\"'datetime'\" viewBox=\"0 0 24 24\" width=\"100%\" height=\"100%\" fill=\"currentColor\"\r\n            style=\"vertical-align: top\" focusable=\"false\">\r\n      <path d=\"M15,13H16.5V15.82L18.94,17.23L18.19,18.53L15,16.69V13M19,8H5V19H9.67C9.24,18.09 9,17.07 9,16A7,7 0 0,1 16,9C17.07,9 18.09,9.24 19,9.67V8M5,21C3.89,21 3,20.1 3,19V5C3,3.89 3.89,3 5,3H6V1H8V3H16V1H18V3H19A2,2 0 0,1 21,5V11.1C22.24,12.36 23,14.09 23,16A7,7 0 0,1 16,23C14.09,23 12.36,22.24 11.1,21H5M16,11.15A4.85,4.85 0 0,0 11.15,16C11.15,18.68 13.32,20.85 16,20.85A4.85,4.85 0 0,0 20.85,16C20.85,13.32 18.68,11.15 16,11.15Z\"></path>\r\n    </svg>\r\n    <svg *ngSwitchDefault viewBox=\"0 0 24 24\" width=\"100%\" height=\"100%\" fill=\"currentColor\"\r\n        style=\"vertical-align: top\" focusable=\"false\">\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n      <path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/>\r\n    </svg>\r\n  </mat-icon>\r\n</button>\r\n`,\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-toggle\"\r\n  },\r\n  exportAs: \"matDatetimepickerToggle\",\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  /** Datepicker instance that the button will toggle. */\r\n  @Input(\"for\") datetimepicker: MatDatetimepicker<D>;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.datetimepicker.disabled : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.datepicker) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  _open(event: Event): void {\r\n    if (this.datetimepicker && !this.disabled) {\r\n      this.datetimepicker.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const datepickerDisabled = this.datetimepicker ? this.datetimepicker._disabledChange : observableOf();\r\n    const inputDisabled = this.datetimepicker && this.datetimepicker._datepickerInput ?\r\n        this.datetimepicker._datepickerInput._disabledChange : observableOf();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled)\r\n        .subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport {\r\n  DatetimeAdapter\r\n} from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\r\nimport { slideCalendar } from \"./datetimepicker-animations\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\n\r\nconst DAYS_PER_WEEK = 7;\r\n\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-month-view\",\r\n  template: `<table class=\"mat-datetimepicker-calendar-table\">\r\n  <thead class=\"mat-datetimepicker-calendar-table-header\">\r\n    <tr><th *ngFor=\"let day of _weekdays\" [attr.aria-label]=\"day.long\">{{day.narrow}}</th></tr>\r\n  </thead>\r\n  <tbody [@slideCalendar]=\"_calendarState\"\r\n         (@slideCalendar.done)=\"_calendarStateDone()\"\r\n         mat-datetimepicker-calendar-body\r\n         role=\"grid\"\r\n         [rows]=\"_weeks\"\r\n         [todayValue]=\"_todayDate\"\r\n         [selectedValue]=\"_selectedDate\"\r\n         [activeCell]=\"_adapter.getDate(activeDate) - 1\"\r\n         (selectedValueChange)=\"_dateSelected($event)\"></tbody>\r\n</table>\r\n`,\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerMonthView<D> implements AfterContentInit {\r\n\r\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  /**\r\n   * The date to display in this month view (everything other than the month and year is ignored).\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n      if (this._adapter.isInNextMonth(oldActiveDate, this._activeDate)) {\r\n        this.calendarState(\"right\");\r\n      } else {\r\n        this.calendarState(\"left\");\r\n      }\r\n    }\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new date is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Grid of calendar cells representing the dates of the month. */\r\n  _weeks: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The number of blank cells in the first row before the 1st of the month. */\r\n  _firstWeekOffset: number;\r\n\r\n  /**\r\n   * The date of the month that the currently selected Date falls on.\r\n   * Null if the currently selected Date is in another month.\r\n   */\r\n  _selectedDate: number;\r\n\r\n  /** The date of the month that today falls on. Null if today is in another month. */\r\n  _todayDate: number;\r\n\r\n  /** The names of the weekdays. */\r\n  _weekdays: { long: string, narrow: string }[];\r\n\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    const firstDayOfWeek = this._adapter.getFirstDayOfWeek();\r\n    const narrowWeekdays = this._adapter.getDayOfWeekNames(\"narrow\");\r\n    const longWeekdays = this._adapter.getDayOfWeekNames(\"long\");\r\n\r\n    // Rotate the labels for days of the week based on the configured first day of the week.\r\n    let weekdays = longWeekdays.map((long, i) => {\r\n      return {long, narrow: narrowWeekdays[i]};\r\n    });\r\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new date is selected. */\r\n  _dateSelected(date: number) {\r\n    const userSelected = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate),\r\n      date, this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    this.selected = userSelected;\r\n    this.selectedChange.emit(userSelected);\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n    this._todayDate = this._getDateInCurrentMonth(this._adapter.today());\r\n\r\n    let firstOfMonth = this._adapter.createDatetime(this._adapter.getYear(this.activeDate),\r\n      this._adapter.getMonth(this.activeDate), 1,\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n    this._firstWeekOffset =\r\n      (DAYS_PER_WEEK + this._adapter.getDayOfWeek(firstOfMonth) -\r\n        this._adapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\r\n\r\n    this._createWeekCells();\r\n  }\r\n\r\n  /** Creates MdCalendarCells for the dates in this month. */\r\n  private _createWeekCells() {\r\n    let daysInMonth = this._adapter.getNumDaysInMonth(this.activeDate);\r\n    let dateNames = this._adapter.getDateNames();\r\n    this._weeks = [[]];\r\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++ , cell++) {\r\n      if (cell == DAYS_PER_WEEK) {\r\n        this._weeks.push([]);\r\n        cell = 0;\r\n      }\r\n      let date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate), i + 1,\r\n        this._adapter.getHour(this.activeDate),\r\n        this._adapter.getMinute(this.activeDate));\r\n      let enabled = !this.dateFilter ||\r\n        this.dateFilter(date);\r\n      let ariaLabel = this._adapter.format(date, this._dateFormats.display.dateA11yLabel);\r\n      this._weeks[this._weeks.length - 1]\r\n        .push(new MatDatetimepickerCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the date in this month that the given Date falls on.\r\n   * Returns null if the given Date is in another month.\r\n   */\r\n  private _getDateInCurrentMonth(date: D): number {\r\n    return this._adapter.sameMonthAndYear(date, this.activeDate) ?\r\n      this._adapter.getDate(date) : null;\r\n  }\r\n\r\n  private calendarState(direction: string): void {\r\n    this._calendarState = direction;\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\r\nimport { slideCalendar } from \"./datetimepicker-animations\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport {\r\n  DatetimeAdapter\r\n} from \"../adapter/datetime-adapter\";\r\n\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-year-view\",\r\n  template: `<table class=\"mat-datetimepicker-calendar-table\">\r\n  <thead class=\"mat-datetimepicker-calendar-table-header\"></thead>\r\n  <tbody [@slideCalendar]=\"_calendarState\"\r\n         (@slideCalendar.done)=\"_calendarStateDone()\"\r\n         mat-datetimepicker-calendar-body\r\n         role=\"grid\"\r\n         allowDisabledSelection=\"true\"\r\n         [label]=\"_yearLabel\"\r\n         [rows]=\"_months\"\r\n         [todayValue]=\"_todayMonth\"\r\n         [selectedValue]=\"_selectedMonth\"\r\n         [labelMinRequiredCells]=\"2\"\r\n         [activeCell]=\"_adapter.getMonth(activeDate)\"\r\n         (selectedValueChange)=\"_monthSelected($event)\"></tbody>\r\n</table>\r\n`,\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerYearView<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  /** The date to display in this year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !this._adapter.sameYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n      // if (oldActiveDate < this._activeDate) {\r\n      //  this.calendarState('right');\r\n      // } else {\r\n      //  this.calendarState('left');\r\n      // }\r\n    }\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Grid of calendar cells representing the months of the year. */\r\n  _months: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The label for this year (e.g. \"2017\"). */\r\n  _yearLabel: string;\r\n\r\n  /** The month in this year that today falls on. Null if today is in a different year. */\r\n  _todayMonth: number;\r\n\r\n  /**\r\n   * The month in this year that the selected Date falls on.\r\n   * Null if the selected Date is in a different year.\r\n   */\r\n  _selectedMonth: number;\r\n\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new month is selected. */\r\n  _monthSelected(month: number) {\r\n    const userSelected = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), month,\r\n      this._adapter.getDate(this.activeDate),\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    this.selectedChange.emit(userSelected);\r\n    this.selected = userSelected;\r\n    this._selectedMonth = month;\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n    this._todayMonth = this._getMonthInCurrentYear(this._adapter.today());\r\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\r\n\r\n    let monthNames = this._adapter.getMonthNames(\"short\");\r\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\r\n    this._months = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11]].map(row => row.map(\r\n      month => this._createCellForMonth(month, monthNames[month])));\r\n  }\r\n\r\n  /**\r\n   * Gets the month in this year that the given Date falls on.\r\n   * Returns null if the given Date is in another year.\r\n   */\r\n  private _getMonthInCurrentYear(date: D) {\r\n    return this._adapter.sameYear(date, this.activeDate) ?\r\n      this._adapter.getMonth(date) : null;\r\n  }\r\n\r\n  /** Creates an MdCalendarCell for the given month. */\r\n  private _createCellForMonth(month: number, monthName: string) {\r\n    let ariaLabel = this._adapter.format(\r\n      this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1,\r\n        this._adapter.getHour(this.activeDate),\r\n        this._adapter.getMinute(this.activeDate)),\r\n      this._dateFormats.display.monthYearA11yLabel);\r\n    return new MatDatetimepickerCalendarCell(\r\n      month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\r\n  }\r\n\r\n  /** Whether the given month is enabled. */\r\n  private _isMonthEnabled(month: number) {\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    let firstOfMonth = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), month, 1,\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    // If any date in the month is enabled count the month as enabled.\r\n    for (let date = firstOfMonth; this._adapter.getMonth(date) == month;\r\n         date = this._adapter.addCalendarDays(date, 1)) {\r\n      if (this.dateFilter(date)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // private calendarState(direction: string): void {\r\n  //   this._calendarState = direction;\r\n  // }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n}\r\n","import { A11yModule } from \"@angular/cdk/a11y\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport {\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatIconModule\r\n} from \"@angular/material\";\r\nimport { MatDatetimepickerCalendar } from \"./calendar\";\r\nimport { MatDatetimepickerCalendarBody } from \"./calendar-body\";\r\nimport { MatDatetimepickerClock } from \"./clock\";\r\nimport {\r\n  MatDatetimepicker,\r\n  MatDatetimepickerContent\r\n} from \"./datetimepicker\";\r\nimport { MatDatetimepickerInput } from \"./datetimepicker-input\";\r\nimport { MatDatetimepickerToggle } from \"./datetimepicker-toggle\";\r\nimport { MatDatetimepickerMonthView } from \"./month-view\";\r\nimport { MatDatetimepickerYearView } from \"./year-view\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    OverlayModule,\r\n    A11yModule\r\n  ],\r\n  entryComponents: [\r\n    MatDatetimepickerContent\r\n  ],\r\n  declarations: [\r\n    MatDatetimepickerCalendar,\r\n    MatDatetimepickerCalendarBody,\r\n    MatDatetimepickerClock,\r\n    MatDatetimepicker,\r\n    MatDatetimepickerToggle,\r\n    MatDatetimepickerInput,\r\n    MatDatetimepickerContent,\r\n    MatDatetimepickerMonthView,\r\n    MatDatetimepickerYearView\r\n  ],\r\n  exports: [\r\n    MatDatetimepickerCalendar,\r\n    MatDatetimepickerCalendarBody,\r\n    MatDatetimepickerClock,\r\n    MatDatetimepicker,\r\n    MatDatetimepickerToggle,\r\n    MatDatetimepickerInput,\r\n    MatDatetimepickerContent,\r\n    MatDatetimepickerMonthView,\r\n    MatDatetimepickerYearView\r\n  ]\r\n})\r\nexport class MatDatetimepickerModule {\r\n}\r\n"],"names":["tslib_1.__extends","DateAdapter","InjectionToken","Injectable","Optional","Inject","MAT_DATE_LOCALE","NgModule","NativeDateModule","MatNativeDateModule","trigger","state","style","transition","animate","keyframes","EventEmitter","first","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","END","PAGE_UP","PAGE_DOWN","ENTER","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","MatDatepickerIntl","NgZone","ChangeDetectorRef","Output","Input","ESCAPE","ViewChild","Subscription","Subject","coerceBooleanProperty","ComponentPortal","OverlayConfig","MatDialog","Overlay","ViewContainerRef","MAT_DATEPICKER_SCROLL_STRATEGY","Directionality","DOCUMENT","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Validators","Directive","MAT_INPUT_VALUE_ACCESSOR","MatFormField","observableOf","merge","CommonModule","MatButtonModule","MatDialogModule","MatIconModule","OverlayModule","A11yModule"],"mappings":"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"}
